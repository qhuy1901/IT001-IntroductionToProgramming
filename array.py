# -*- coding: utf-8 -*-
"""Array.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1wuGXoTzXsVzXmCUmRqcwCLIehPaot9Nq

**References:**

[1]	“Python Lists.” https://www.w3schools.com/python/python_lists.asp (accessed Jan. 29, 2021).

[2]	“Python Arrays.” https://www.w3schools.com/python/python_arrays.asp (accessed Jan. 29, 2021).

[3] "joeyajames/ udemy_data_structures" https://github.com/joeyajames/udemy_data_structures (accessed Feb. 1, 2021).

[4]	“Learning with Python_ How to Think Like a Computer Scientist” https://drive.google.com/file/d/1S_q1N7gZBXHzrl9p9p6EiFUlem8owRoi/view?usp=sharing

# **BASIC EXERCISE**

**Question 84, 85, 86, 87:** Write a function that imports a one-dimensional array of real/interger numbers and prints it on the screen.
"""

n = int(input())
lst = []
for i in range(n):
    lst.append(int(input()))
print(lst)

n = int(input())
lst = ([float(input()) for i in range(n)])
print(lst)

"""**Question 88:** Write a function that lists even values in a one-dimensional array of numbers."""

def list_even_values(lst):
    for val in lst:
       if val % 2 == 0:
         print(val, end = ' ')

n = int(input())
lst = ([int(input()) for i in range(n)])
list_even_values(lst)

"""**Question 89:** Write a function that lists positions where the value is negative in a one-dimensional array of real numbers."""

def list_index_of_negative_values(lst):
    for i in range(len(lst)):
        if lst[i] < 0:
            print(i, end = ' ')

n = int(input())
lst = ([float(input()) for i in range(n)])
list_index_of_negative_values(lst)

"""**Question 90:** Finds "maximum value" in a one-dimensional array of real numbers"""

lst = [-5, 3, 2.8, 2, 9.5, 7, -3.5]
max(lst)

"""**Question 91:** Finds the "first positive value" in a one-dimensional array of real numbers. If the array has no positive value, -1 is returned."""

def first_positive_value(lst):
    """Return the "first positive value" in a one-dimensional array of real numbers.
    If the array has no positive value, -1 is returned."""
    for val in lst:
        if val > 0:
            return val
    return -1

help(first_positive_value)

n = int(input())
lst = [float(input()) for i in range(n)]

print(lst)
first_positive_value(lst)

"""# **SEARCH AND LIST EXERCISES**

**Question 132:** List negative numbers in a one-dimensional array of real numbers
"""

n = int(input('n = '))
lst = [float(input()) for i in range(n)]

print([number for number in lst if number < 0])

"""**Question 133:** List the values in a one-dimensional array of real numbers in a given segment `[x, y]`





> 1. Use the `split ()` method to separate data *entered* on the *same line*.
2. The `map (type, obj)` method will convert the data type of all elements in `obj` to `type`. In this example, we apply map which converts type 2 input data to ***int***






"""

n = int(input('n = '))
lst = [float(input()) for i in range(n)]
x, y = map(int, input('[x, y] = ').split())
print(lst[x : y + 1])

"""**Question 139** List the positons where the value is the largest in a one-dimensional array of real numbers. 



> `Enumerate()` method adds a counter to an iterable and returns it in a form of enumerate object.




"""

n = int(input('n = '))
lst = [float(input()) for i in range(n)]

print([index for index, value in enumerate(lst) if value == max(lst)])

"""**Question 151:** List values in an array of integers whose first digit is an odd number."""

def get_first_digit(n):
    digit = str(n)
    return int(digit[0])

n = int(input('n = '))
lst = [int(input()) for i in range(n)]

print([value for value in lst if get_first_digit(value) % 2 != 0 ])

"""# **SUMMING TECHNIQUES**

**Question 154:** Calculate the sum of elements in the array
"""

n = int(input('n = '))
lst = [int(input()) for i in range(n)]
sum(lst)

"""**Question 157:** Calculate the sum of values with the tens digit is  5 in the array of integers"""

def tens_digit_is_five(n):
    unit = n % 10
    ten = (n % 100 - unit) // 10
    return True if ten == 5 else False

def sum_all_tens_digit_is_five(lst):
    Sum = 0
    for val in lst:
        if tens_digit_is_five(val):
            Sum += val
    return Sum

n = int(input('n = '))
lst = [int(input()) for i in range(n)]
sum_all_tens_digit_is_five(lst)

"""**Question 158:** Calculate the sum of values greater than the value preceding it in a one-dimensional array of real numbers."""

n = int(input('n = '))
lst = [float(input()) for i in range(n)]

sum = 0
for i in range(1, len(lst)):
    if(lst[i] > lst[i - 1]):
        sum += lst[i]
print(sum)

"""# **COUNTING TECHNIQUES**

**Question 171:** Count the number of even numbers in a one-dimensional array of integer numbers.
"""

def count_even_numbers(lst):
    count = 0
    for i in range(len(lst)):
        if lst[i] % 2 == 0:
            count += 1
    return count

n = int(input('n = '))
lst = [int(input()) for i in range(n)]
count_even_numbers(lst)

"""**Question 171:** Count the number of positive values divided by 7 in a one-dimensional array of integer numbers"""

def count_positive_values_divided_by_seven(lst):
    count = 0
    for i in range(len(lst)):
        if lst[i] % 7 == 0:
            count += 1
    return count

n = int(input('n = '))
lst = [int(input()) for i in range(n)]
count_positive_values_divided_by_seven(lst)

"""# **DELETE EXERCISES**

**Question 225:** Delete the elements with index `k` in the array.
"""

n = int(input('n = '))
lst = [float(input()) for i in range(n)]
k = int(input('k = '))

print(lst)
del(lst[k])
print(lst)

"""**Question 231:** Delete all "prime numbers" in the integer array"""

def is_prime(n):
    if n < 2:
        return False
    for i in range(2, n):
        if n % i == 0:
            return False
    return True

# Approach 1 (Error)
def delete_all_prime(lst):
    i = 0
    real_len = len(lst)
    while(i < n):
        if is_prime(lst[i]):
            lst.remove(lst[i])
            i -= 1
            real_len -= 1
        i += 1

n = int(input('n = '))
lst = [int(input()) for i in range(n)]

print(lst)
delete_all_prime(lst)
print(lst)

# Approach 2
n = int(input('n = '))
lst = [int(input()) for i in range(n)]

new_lst = [val for val in lst if is_prime(val) == False]
print(lst, new_lst)

"""**Numpy (Numerical Python)**

According to [w3schools.com](https://) :

NumPy is a Python library used for working with arrays.

It also has functions for working in domain of linear algebra, fourier transform, and matrices.




"""

import numpy as np

import numpy as np

n = int(input('n = '))
arr = np.array([input() for i in range(n)], dtype = 'i')

print(arr.dtype)